<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.smartdatalake</groupId>
	<artifactId>spark-extensions_${scala.minor.version}</artifactId>
	<version>3.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<licenses>
		<license>
			<name>Apache 2.0 License</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<!-- Used for license header by maven-license-plugin -->
	<name>Spark extensions</name>
	<description>Spark extensions for SmartDataLakeBuilder</description>
	<url>http://www.smartdatalake.io</url>
	<inceptionYear>2019</inceptionYear>
	<organization>
		<name>ELCA Informatique SA</name>
		<url>https://www.elca.ch</url>
	</organization>

	<developers>
		<developer>
			<name>Smart Data Lake</name>
			<email>smartdatalake@elca.ch</email>
			<organization>ELCA Informatik AG</organization>
			<organizationUrl>http://www.elca.ch</organizationUrl>
		</developer>
	</developers>

	<profiles>
		<!-- only scala 2.12 supported in spark 3.0 -->
		<profile>
			<id>scala-2.12</id>
			<activation><activeByDefault>true</activeByDefault></activation>
			<properties>
				<scala.minor.version>2.12</scala.minor.version>
				<scala.version>${scala.minor.version}.10</scala.version>
			</properties>
		</profile>
	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skip.assembly>true</skip.assembly>
		<noLinkWarnings>-unchecked</noLinkWarnings>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.release>8</maven.compiler.release>

		<scala.minor.version>2.12</scala.minor.version>
		<scala.version>${scala.minor.version}.12</scala.version>

		<spark.version>3.0.3</spark.version>
		<confluent.version>6.2.1</confluent.version>

		<!-- we build for hadoop 3.2, but artifcat should also work with 2.7 -->
		<hadoop.version>3.2.0</hadoop.version>
		<curator.version>2.13.0</curator.version>

		<scalatest.version>3.2.2</scalatest.version>
	</properties>

	<scm>
		<connection>scm:git:git://github.com/smart-data-lake/spark-extensions.git</connection>
		<developerConnection>scm:git:ssh://github.com/smart-data-lake/spark-extensions.git</developerConnection>
		<url>http://github.com/smart-data-lake/spark-extensions/tree/master</url>
	</scm>

	<repositories>
		<repository>
			<id>maven central</id>
			<name>Maven Central Repository</name>
			<url>https://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>confluent</id>
			<name>Confluent Schema Registry Repository</name>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<!--testSourceDirectory>src/test/scala</testSourceDirectory-->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<targetPath>META-INF</targetPath>
				<directory>${basedir}</directory>
				<filtering>false</filtering>
				<includes>
					<include>COPYING</include> <!-- the file containing the license text -->
					<include>NOTICE</include> <!-- the file containing the license text -->
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<!-- Compiles Scala sources. -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>4.3.1</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaCompatVersion>${scala.minor.version}</scalaCompatVersion>
					<checkMultipleScalaVersions>true</checkMultipleScalaVersions>
					<failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
					<recompileMode>incremental</recompileMode>
					<args>
						<arg>-unchecked</arg>
						<arg>-deprecation</arg>
						<arg>-feature</arg>
						<arg>-explaintypes</arg>
						<arg>-target:jvm-1.8</arg>
						<arg>${noLinkWarnings}</arg>
					</args>
					<jvmArgs>
						<jvmArg>-Xms64m</jvmArg>
						<jvmArg>-Xmx1024m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>

			<!-- rewrite pom for compiling with different scala version profiles -->
			<plugin>
				<groupId>org.spurint.maven.plugins</groupId>
				<artifactId>scala-cross-maven-plugin</artifactId>
				<version>0.2.1</version>
				<executions>
					<execution>
						<id>rewrite-pom</id>
						<goals>
							<goal>rewrite-pom</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Copies files in resources folders to target folder. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<!-- Checks whether source files have the specified license header. -->
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<header>src/license/apachev2-header.txt</header>
					<properties>
						<copyright.name>${project.organization.name}</copyright.name>
						<copyright.contact>${project.organization.url}</copyright.contact>
					</properties>
					<includes>
						<include>src/**</include>
					</includes>
					<mapping>
						<scala>SLASHSTAR_STYLE</scala>
					</mapping>
					<failIfMissing>false</failIfMissing>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin-git</artifactId>
						<version>3.0</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<!--<phase>process-sources</phase>-->
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Creates the jar without dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.2</version>
				<configuration>
					<excludes>
						<exclude>log4j.properties</exclude> <!-- Logging configuration should be left to user. -->
						<exclude>${project.artifactId}*.jar</exclude> <!-- avoid "Error assembling JAR" because of already existing artifact jar -->
					</excludes>
				</configuration>
			</plugin>

			<!-- Creates a JAR file with the source files of the project. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludes>
						<exclude>log4j.properties</exclude> <!-- Logging configuration source should not be distributed. -->
					</excludes>
				</configuration>
			</plugin>

			<!-- Executes units tests with scalatest  -->
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<reportsDirectory>
						${project.build.directory}/scalatest-reports
					</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>
						${project.artifactId}.txt
					</filereports>
					<stdout>WT</stdout>  <!-- without color, show reminder of failed and canceled tests with short stack traces, see: http://www.scalatest.org/user_guide/using_scalatest_with_sbt-->
					<environmentVariables>
						<SPARK_LOCAL_IP>127.0.0.1</SPARK_LOCAL_IP> <!-- Suppresses Spark IP discovery during tests (when executed with mvn test) -->
					</environmentVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Allows handling of version numbers -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>

		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.minor.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.minor.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-catalyst_${scala.minor.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-avro_${scala.minor.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-schema-registry-client</artifactId>
			<version>${confluent.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.avro</groupId>
					<artifactId>avro</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.minor.version}</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scalatestplus</groupId>
			<artifactId>mockito-3-4_${scala.minor.version}</artifactId>
			<version>3.2.3.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- this block is copied from spark parent pom to override hadoop dependencies with correct version. -->
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-client</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.fusesource.leveldbjni</groupId>
						<artifactId>leveldbjni-all</artifactId>
					</exclusion>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.codehaus.jackson</groupId>
						<artifactId>jackson-mapper-asl</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
					<exclusion>
						<!-- BeanUtils >= 1.9.0 no longer splits out -core; exclude it -->
						<groupId>commons-beanutils</groupId>
						<artifactId>commons-beanutils-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-all</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>servlet-api-2.5</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.jersey-test-framework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.contribs</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>net.java.dev.jets3t</groupId>
						<artifactId>jets3t</artifactId>
					</exclusion>
					<!-- Hadoop-3.2 -->
					<exclusion>
						<groupId>javax.ws.rs</groupId>
						<artifactId>jsr311-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-webapp</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-api</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.jersey-test-framework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.contribs</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>jdk.tools</groupId>
						<artifactId>jdk.tools</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-common</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.jersey-test-framework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.contribs</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-server-web-proxy</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.fusesource.leveldbjni</groupId>
						<artifactId>leveldbjni-all</artifactId>
					</exclusion>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.jersey-test-framework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.contribs</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<!-- Hadoop-3.2 -->
					<exclusion>
						<groupId>com.zaxxer</groupId>
						<artifactId>HikariCP-java7</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.microsoft.sqlserver</groupId>
						<artifactId>mssql-jdbc</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-client</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.jersey-test-framework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jersey.contribs</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-recipes</artifactId>
				<version>${curator.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
					<exclusion>
						<groupId>jline</groupId>
						<artifactId>jline</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-client</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>${curator.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
